@import "https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.4.6/css/swiper.min.css";
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
html,
body {
  width: 100%;
  height: 100%;
}
body {
  min-width: 320px;
  font-size: 16px;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  background-color: #F5F5F5;
}
header,
section {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  position: relative;
}
ul {
  padding: 0;
  margin: 0;
}
li {
  list-style: none;
}
p {
  margin: 0 0 15px;
}
.wrapper {
  min-height: 100%;
  overflow: hidden;
  position: relative;
  width: 100%;
}
img {
  display: block;
  max-width: 100%;
  max-height: 100%;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0;
  font-weight: normal;
}
h2 {
  color: #316C96;
  font-size: 20px;
  margin-bottom: 20px;
}
.button {
  display: inline-block;
  border: none;
  color: #fff;
  text-decoration: none;
  background-color: #316C96;
  padding-left: 32px;
  padding-right: 32px;
  line-height: 55px;
  font-size: 13px;
  text-transform: uppercase;
  font-weight: 600;
  text-align: center;
  position: relative;
  outline: none;
  -webkit-transition: background-color 0.1s ease;
  -o-transition: background-color 0.1s ease;
  transition: background-color 0.1s ease;
  cursor: pointer;
}
.container {
  position: relative;
  z-index: 1;
  margin: 0 auto;
  padding: 0 15px;
  max-width: 990px;
}
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}
/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}
/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
  text-decoration: none;
}
/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}
a:hover {
  text-decoration: none;
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
.button {
  border-radius: 16px;
  border: 2px solid #e3e8f0;
  height: 32px;
  padding-left: 18px;
  padding-right: 18px;
  padding-top: 7px;
  padding-bottom: 11px;
  color: blue;
  text-transform: uppercase;
  font-size: 11px;
  letter-spacing: 1.1px;
  cursor: pointer;
}
.title {
  font-size: 20px;
  color: #262626;
  text-transform: uppercase;
}
.content {
  padding-top: 30px;
}
.content__top {
  margin-bottom: 30px;
}
.content__top.active p,
.content__top.active .link,
.content__top.active .content__img,
.content__top.active .decrease-button {
  display: none;
}
.content__top.active .content__text {
  width: 100%;
}
.content__top.active h1,
.content__top.active h2 {
  text-align: center;
}
.content__top.active + .content__bottom .swiper-button-next,
.content__top.active + .content__bottom .swiper-button-prev {
  display: block;
}
.content__top.active .content__slider-next,
.content__top.active .content__slider-prev {
  display: none;
}
.content__container {
  position: relative;
  z-index: 1;
  margin: 0 auto;
  padding: 0 15px;
  max-width: 990px;
}
.content__inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  position: relative;
}
@media (max-width: 720px) {
  .content__inner {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}
.content__slider {
  overflow: visible;
  z-index: 2;
  margin-bottom: 15px;
}
.content__slider-item {
  cursor: pointer;
}
.content__text {
  width: calc(50% - 20px);
}
@media (max-width: 720px) {
  .content__text {
    width: 100%;
  }
}
@media (max-width: 420px) {
  .content__text p,
  .content__text h1,
  .content__text h2 {
    text-align: center;
  }
}
.content__text p:last-of-type {
  margin-bottom: 30px;
}
.content__img {
  margin-top: 25px;
  background-color: #ffffff;
  border-radius: 20px;
  border: 1px solid #8B8B8B;
  width: calc(50% - 20px);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 20px 0;
  -webkit-box-shadow: 0 6px 5px 0px rgba(0, 0, 0, 0.1);
  box-shadow: 0 6px 5px 0px rgba(0, 0, 0, 0.1);
  height: 315px;
}
@media (max-width: 720px) {
  .content__img {
    display: none;
  }
}
.content__bottom {
  position: relative;
}
.content__bottom::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  height: 1px;
  background-color: #E6E6E6;
  width: 100%;
}
.content__slider-next,
.content__slider-prev {
  z-index: 10;
  position: absolute;
  background-size: 15px 15px;
  width: 50%;
  top: 0;
  height: 100%;
  margin-top: -10px;
  -webkit-box-shadow: 0 0 5px -5px #000;
  box-shadow: 0 0 5px -5px #000;
  cursor: pointer;
}
.content__slider-next.swiper-button-disabled,
.content__slider-prev.swiper-button-disabled {
  opacity: 1;
}
.content__slider-next:focus,
.content__slider-prev:focus {
  outline: 0;
}
.content__slider-next,
.swiper-container-rtl .content__slider-prev {
  right: 0;
  left: auto;
}
.content__slider-prev,
.swiper-container-rtl .content__slider-next {
  left: 0;
  right: auto;
}
.link {
  color: #316C96;
  font-style: italic;
  font-weight: 400;
  display: inline-block;
  margin-bottom: 5px;
  position: relative;
  padding: 5px 0;
}
.link::before,
.link::after {
  content: '';
  position: absolute;
  background-color: #8B8B8B;
  left: 7px;
  height: 10px;
  width: 1px;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}
.link::before {
  top: 2px;
}
.link::after {
  bottom: -10px;
}
.link:hover {
  text-decoration: underline;
}
.decrease-button {
  position: absolute;
  width: 20px;
  height: 20px;
  top: 100%;
  left: 30px;
  z-index: 10;
}
.decrease-button button {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 1px solid #8B8B8B;
  background-color: transparent;
  cursor: pointer;
  position: relative;
  -webkit-transition: border-color 0.1s ease;
  -o-transition: border-color 0.1s ease;
  transition: border-color 0.1s ease;
}
.decrease-button button::before {
  content: '';
  top: 50%;
  position: absolute;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  width: 7px;
  height: 1px;
  background-color: #8B8B8B;
  -webkit-transition: background-color 0.1s ease;
  -o-transition: background-color 0.1s ease;
  transition: background-color 0.1s ease;
}
.decrease-button button:focus {
  outline: 0;
}
.decrease-button button:hover {
  border-color: #316C96;
}
.decrease-button button:hover::before {
  background-color: #316C96;
}
.slider-nav {
  padding: 0 20px;
}
.slider-nav .swiper-wrapper {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-transition: none !important;
  -o-transition: none !important;
  transition: none !important;
}
.slider-nav .swiper-slide {
  height: initial;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.slider-nav .swiper-slide:hover .slider-nav__popup {
  opacity: 1;
  visibility: visible;
}
.slider-nav__item {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  max-width: 180px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-radius: 10px;
  border: 1px solid #8B8B8B;
  cursor: pointer;
  position: relative;
}
.slider-nav__item:hover {
  border-color: black;
}
.slider-nav__item:hover::before {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 20px;
}
.slider-nav__img {
  width: 120px;
}
.slider-nav__popup {
  padding: 10px;
  position: absolute;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  left: 50%;
  width: 350px;
  opacity: 0;
  visibility: hidden;
  top: calc(100% + 20px);
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  border-radius: 6px;
  background-color: #ffffff;
  border: 1px solid #8B8B8B;
  -webkit-transition: opacity 0.15s ease, visibility 0.15s ease;
  -o-transition: opacity 0.15s ease, visibility 0.15s ease;
  transition: opacity 0.15s ease, visibility 0.15s ease;
}
.slider-nav__popup h6 {
  font-size: 16px;
  margin-bottom: 5px;
}
.slider-nav__popup p {
  margin-bottom: 0;
  color: #316C96;
}
.slider-nav__popup::before {
  content: '';
  position: absolute;
  left: 50%;
  top: -1px;
  width: 20px;
  height: 1px;
  background-color: #fff;
}
.slider-nav__popup-triangle {
  position: absolute;
  left: calc(50% - 1px);
  top: -11px;
  width: 22px;
  height: 11px;
  background-size: cover;
  background-repeat: no-repeat;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 88.15 46.94'%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:%238b8b8b;stroke:%238b8b8b;stroke-linejoin:round;stroke-width:4px;%7D%3C/style%3E%3C/defs%3E%3Ctitle%3Etriangle%3C/title%3E%3Cg id='Слой_2' data-name='Слой 2'%3E%3Cg id='Слой_1-2' data-name='Слой 1'%3E%3Cpath id='svg_1' data-name='svg 1' class='cls-1' d='M48.19.72.69,46.22'/%3E%3Cpath id='svg_2' data-name='svg 2' class='cls-1' d='M47.91,2.1,87.4,46'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}
.swiper-button-next,
.swiper-button-prev {
  z-index: 10;
  display: none;
  background-size: 15px 15px;
  width: 17px;
  height: 18px;
  margin-top: -10px;
  -webkit-box-shadow: 0 0 5px -5px #000;
  box-shadow: 0 0 5px -5px #000;
}
.swiper-button-next.swiper-button-disabled,
.swiper-button-prev.swiper-button-disabled {
  opacity: 1;
}
.swiper-button-next:focus,
.swiper-button-prev:focus {
  outline: 0;
}
.swiper-button-next,
.swiper-container-rtl .swiper-button-prev {
  right: 37%;
  left: auto;
}
.swiper-button-prev,
.swiper-container-rtl .swiper-button-next {
  left: 37%;
  right: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
